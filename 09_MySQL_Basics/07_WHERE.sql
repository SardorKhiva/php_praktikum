/*
 Qolip:
 SELECT
    kerakli_ustunlar
 FROM
    jadval_nomi
 WHERE
    qidiruv_shartlari;
 */

USE `classicmodels`;

#  WHERE - filtrlash uchun ishlatiladi
SELECT *
FROM `classicmodels`.`employees`
WHERE `employeeNumber` = 1088;

SELECT *
FROM `classicmodels`.`employees`
WHERE `employeeNumber` > 1088;

SELECT *
FROM `employees`
WHERE `employeeNumber` < 1088;

SELECT *
FROM `employees`
WHERE `employeeNumber` <= 1088;

SELECT *
FROM `employees`
WHERE `employeeNumber` <> 1088; -- yoki, `employeeNumber` != 1088;

SELECT *
FROM `employees`
WHERE `employeeNumber` = 1088
   OR `lastName` = "Bott"; -- WHERE `employeeNumber` = 1088 || `lastName` = "Bott";

SELECT *
FROM `employees`
WHERE `employeeNumber` = 1088
  AND (`lastName` = "Bott" OR `officeCode` = 5);

-- BETWEEN - 2 ta oraliqdagi qiymatlarni kiritish uchun
/*
 Qolip:
 SELECT
    `kerakli_ustunlar`
 FROM
    `jadval_nomi`
 WHERE
     `filtrlanadigan_ustun_nomi`
     BETWEEN `minimal_qiymat` AND `maximal_qiymat`;
 */

SELECT *
FROM `employees`
WHERE `employeeNumber` BETWEEN 1088 AND 1200; -- 1088 va 1200 oralig'idagi intervalni filtrla

SELECT *
FROM `orders`
WHERE `orderDate`
          BETWEEN '2003-01-01'
          AND '2003-01-23';

-- LIKE - o'xshashlarni qidiradi
/*
 WHERE `customerName` LIKE 'a%'; -- qiymati a bilan boshlanadiganlarni qidirish
 WHERE `customerName` LIKE '%a'; -- qiymati a bilan tugaydiganlarni qidirish
 WHERE `customerName` LIKE '%aaa%'; --
 WHERE `customerName` LIKE ''; --
 */

-- –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É
CREATE TABLE customers2
(
    id           INT AUTO_INCREMENT PRIMARY KEY,
    customerName VARCHAR(50)
);

-- –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
INSERT INTO customers2 (customerName)
VALUES ('Anna'),
       ('Alex'),
       ('AlmaaaShop'),
       ('Baaa'),
       ('Jackson'),
       ('Anderson'),
       ('Benny'),
       ('Conor'),
       ('Kate'),
       ('Sam');

-- 1. –ò–º—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å A
SELECT *
FROM customers2
WHERE customerName LIKE 'A%';

-- 2. –ò–º—è –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ son
SELECT *
FROM customers2
WHERE customerName LIKE '%son';

-- 3. –ò–º—è —Å–æ–¥–µ—Ä–∂–∏—Ç aaa
SELECT *
FROM customers2
WHERE customerName LIKE '%aaa%';

-- 4. –¢—Ä–µ—Ç–∏–π —Å–∏–º–≤–æ–ª = n
SELECT *
FROM customers2
WHERE customerName LIKE '__n%';

-- 5. –í—Ç–æ—Ä–æ–π —Å–∏–º–≤–æ–ª = a
SELECT *
FROM customers2
WHERE customerName LIKE '_a%';

-- 6. –ü–æ–∏—Å–∫ —Å —É—á—ë—Ç–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞
SELECT *
FROM customers2
WHERE BINARY customerName LIKE 'A%';

-- 7. –†–µ–≥—É–ª—è—Ä–∫–∞: –∏–º—è —Å–æ–¥–µ—Ä–∂–∏—Ç "a" –∏–ª–∏ "e"
SELECT *
FROM customers2
WHERE customerName REGEXP 'a|e';
-- WHERE customerName REGEXP '[ae]';

# IN - berilgan qiymatlar ichidan moslarini qidirish
SELECT *
FROM `employees`
WHERE `employeeNumber` IN (1501, 1076, 1176, 1209); -- shu qiymatlarni qidiradi

SELECT *
FROM `customers`
WHERE `country` IN ("USA", "Spain", "Africa", "Italy");

# NOT IN - IN ni teskarisi, mavjud emaslarini qidiradi
SELECT *
FROM `employees`
WHERE NOT `employeeNumber`
    IN (1501, 1076, 1176, 1209);

-- tepadagi bilan bir xil
SELECT *
FROM `employees`
WHERE `employeeNumber`
          NOT IN (1501, 1076, 1176, 1209);

# IS NULL - maydondan NULL ga teng bo'lganlarni qidirish
SELECT *
FROM `customers`
WHERE `state` IS NULL;

# IS NOT NULL - maydondan NULL ga teng emaslarni qidirish
SELECT *
FROM `customers`
WHERE `state` IS NOT NULL;

-- ANY va ALL
-- –°–æ–∑–¥–∞—ë–º —Ç–µ—Å—Ç–æ–≤—É—é –±–∞–∑—É
CREATE DATABASE IF NOT EXISTS `test_any_all`;
USE `test_any_all`;

-- –£–¥–∞–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
DROP TABLE IF EXISTS `salaries`;

-- –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É
CREATE TABLE IF NOT EXISTS `salaries`
(
    `id`     INT AUTO_INCREMENT PRIMARY KEY,
    `name`   VARCHAR(50),
    `salary` INT
);

-- –í—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
INSERT IGNORE INTO salaries (name, salary)
VALUES ('Anna', 3000),
       ('Bob', 5000),
       ('Cathy', 7000),
       ('David', 10000);

-- –î–∞–Ω–Ω—ã–µ:
-- Anna  - 3000
-- Bob   - 5000
-- Cathy - 7000
-- David - 10000

-- ===============================
-- ========== ANY =================
-- ===============================

-- 1. –†–∞–≤–Ω–æ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é (–∫–∞–∫ IN)
SELECT *
FROM `salaries`
WHERE salary = ANY (SELECT `salary`
                    FROM `salaries`
                    WHERE `salary` IN (3000, 7000));
-- –û–∂–∏–¥–∞–µ—Ç—Å—è: Anna (3000), Cathy (7000)

-- 2. –ë–æ–ª—å—à–µ –ª—é–±–æ–≥–æ (—Ç.–µ. —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è)
SELECT *
FROM salaries
WHERE salary > ANY (SELECT salary FROM salaries WHERE salary > 0);
-- –û–∂–∏–¥–∞–µ—Ç—Å—è: –≤—Å–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏, –∫—Ä–æ–º–µ Anna (3000) ‚Äî –ø–æ—Ç–æ–º—É —á—Ç–æ 3000 > 0 –≤–µ—Ä–Ω–æ, –Ω–æ 3000 –Ω–µ –±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–æ –µ—â—ë

-- 3. –ú–µ–Ω—å—à–µ –ª—é–±–æ–≥–æ (—Ç.–µ. –º–µ–Ω—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è)
SELECT *
FROM salaries
WHERE salary < ANY (SELECT salary FROM salaries);
-- –û–∂–∏–¥–∞–µ—Ç—Å—è: –≤—Å–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏, –∫—Ä–æ–º–µ David (10000), —Ç–∞–∫ –∫–∞–∫ –æ–Ω –Ω–µ –º–µ–Ω—å—à–µ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è

-- ===============================
-- ========== ALL =================
-- ===============================

-- 4. –†–∞–≤–Ω–æ –≤—Å–µ–º –∑–Ω–∞—á–µ–Ω–∏—è–º (–æ–±—ã—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤ –ø–æ–¥–∑–∞–ø—Ä–æ—Å–µ 1 —ç–ª–µ–º–µ–Ω—Ç)
SELECT *
FROM salaries
WHERE salary = ALL (SELECT salary FROM salaries WHERE salary = 5000);
-- –û–∂–∏–¥–∞–µ—Ç—Å—è: —Ç–æ–ª—å–∫–æ Bob (5000)

-- 5. –ë–æ–ª—å—à–µ –≤—Å–µ—Ö (—Ç.–µ. –±–æ–ª—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ)
SELECT *
FROM salaries
WHERE salary > ALL (SELECT salary FROM salaries);
-- –û–∂–∏–¥–∞–µ—Ç—Å—è: –ø—É—Å—Ç–æ (–Ω–∏–∫—Ç–æ –Ω–µ –±–æ–ª—å—à–µ —Å–∞–º–æ–≥–æ —Å–µ–±—è)

-- 6. –ú–µ–Ω—å—à–µ –≤—Å–µ—Ö (—Ç.–µ. –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ)
SELECT *
FROM salaries
WHERE salary < ALL (SELECT salary FROM salaries);
-- –û–∂–∏–¥–∞–µ—Ç—Å—è: —Ç–æ–ª—å–∫–æ Anna (3000)

-- ===============================
-- ========== –°—Ä–∞–≤–Ω–µ–Ω–∏–µ =============
-- ===============================

-- 7. > ANY  = –±–æ–ª—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ
SELECT *
FROM salaries
WHERE salary > ANY (SELECT salary FROM salaries);
-- –û–∂–∏–¥–∞–µ—Ç—Å—è: –≤—Å–µ –∫—Ä–æ–º–µ Anna (3000)

-- 8. > ALL  = –±–æ–ª—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ
SELECT *
FROM salaries
WHERE salary > ALL (SELECT salary FROM salaries);
-- –û–∂–∏–¥–∞–µ—Ç—Å—è: –ø—É—Å—Ç–æ

-- 9. < ANY  = –º–µ–Ω—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ
SELECT *
FROM salaries
WHERE salary < ANY (SELECT salary FROM salaries);
-- –û–∂–∏–¥–∞–µ—Ç—Å—è: –≤—Å–µ –∫—Ä–æ–º–µ David (10000)

-- 10. < ALL = –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ
SELECT *
FROM salaries
WHERE salary < ALL (SELECT salary FROM salaries);
-- –û–∂–∏–¥–∞–µ—Ç—Å—è: –ø—É—Å—Ç–æ

/*
= ANY ‚Üí –∫–∞–∫ IN
> ANY ‚Üí –±–æ–ª—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ
< ANY ‚Üí –º–µ–Ω—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ
= ALL ‚Üí —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å–æ –≤—Å–µ–º–∏ (–æ–±—ã—á–Ω–æ 1 –∑–Ω–∞—á–µ–Ω–∏–µ)
> ALL ‚Üí –±–æ–ª—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ
< ALL ‚Üí –º–µ–Ω—å—à–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ
 */

#     ALL - hammasi to'g'ri kelishi kerak,
#     ANY - hech bo'lmasa bir donasi to'gri kelishi kerak
# ANY ‚Üí "—Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ".
# ALL ‚Üí "–≤—Å–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è".
-- Manager lar orasidagi eng katta maosh oldigan hodim
SELECT *
FROM `employees`.`salaries`
WHERE `salary` > ALL ( -- 3)-odimdagi dan katta bo'lgan hamma yozuvlarni chiqarish
    SELECT `salary` -- 3) salary - maoshlari
    FROM `classicmodels`.`employees` -- 1) classicmodels bazasi, employees jadvalidagi
    WHERE `jobTitle` = 'Manager' -- 2) ustundagi yozuv qiymatlari jobtitle = Manager bo'lganlarning
);

# || va && bilan ALL ANY ni solishtirish
# || va && - bir shart yoki bir nechta shartli ifodalar bilan ishlatiladi
# –ù–∞–π—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤,
# —É –∫–æ—Ç–æ—Ä—ã—Ö –∑–∞—Ä–ø–ª–∞—Ç–∞ –±–æ–ª—å—à–µ 1000
# –∏ –¥–æ–ª–∂–Ω–æ—Å—Ç—å "Manager":
SELECT *
FROM `employees`
WHERE `salary` > 1000 && `jobTitle` = 'Manager';


SELECT *
FROM `employees`
WHERE `salary` > 5000 || -- maoshi 5000 dan katta yoki
      `jobTitle` = 'Manager';
-- lavozimi Manager bo'lganlarni filterlash

# ANY va ALL esa odatda subqueries (ichkiso'rov) larda
# ma'lumotlar to'plami bilan solishtirganda ishlatiladi

-- maoshi managerlardan hech bo'lmasa bittasinikidan katta bo'lganlar:
WHERE `salary` > ANY (SELECT `salary` FROM `employees` WHERE `jobTitle` = 'Manager');

-- maoshi managerlarning barchasinikidan katta bo'lganlar
WHERE `salary` > ALL (SELECT `salary` FROM `employees` WHERE `jobTitle` = 'Manager');

/*
üîë –û—Ç–ª–∏—á–∏–µ

|| –∏ && ‚Üí —Ä–∞–±–æ—Ç–∞—é—Ç —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏ –≤ –æ–¥–Ω–æ–º –∑–∞–ø—Ä–æ—Å–µ.

ANY –∏ ALL ‚Üí —Ä–∞–±–æ—Ç–∞—é—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø–æ–¥–∑–∞–ø—Ä–æ—Å–∞ (—Å–ø–∏—Å–∫–æ–º –∑–Ω–∞—á–µ–Ω–∏–π).

üìå –ï—Å–ª–∏ –ø—Ä–æ—â–µ:

|| –∏ && ‚Äî —ç—Ç–æ –ø—Ä–æ "–ª–æ–≥–∏–∫–∞ –≤–Ω—É—Ç—Ä–∏ –∑–∞–ø—Ä–æ—Å–∞".

ANY –∏ ALL ‚Äî —ç—Ç–æ –ø—Ä–æ "—Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –Ω–∞–±–æ—Ä–æ–º –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–æ–¥–∑–∞–ø—Ä–æ—Å–∞".
 */

CREATE TABLE IF NOT EXISTS `employees`
(
    `id`     INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    `name`   VARCHAR(50),
    `salary` DECIMAL(10, 2)
);

INSERT IGNORE INTO `employees`(`name`, `salary`)
VALUES ('Ali', 1000),
       ('Bek', 2000),
       ('Mahmud', 3000);

SELECT *
FROM `employees`
WHERE `salary` > ANY
      ( -- salary > 1000 yoki salary > 2000 lar (1-qismi true bo'lgani uchun shu joydan tekshirishni to'xtatib natijaga o'tadi!)
          SELECT `salary`
          FROM `employees`
          WHERE `name` IN ('Ali', 'Bek'));
/*
| id | name   | salary  |
| 2  | Bek    | 2000.00 |
| 3  | Mahmud | 3000.00 |
 */

SELECT *
FROM `employees`
WHERE `salary` > ALL ( -- Ali va Bek lardan oyligi katta barchasi
    SELECT `salary`
    FROM `employees`
    WHERE `name` IN ('Ali', 'Bek'));
-- Mahmud 3000 ni qaytaradi, chunki shartdagi hamma qismlar true bo'lishi kerak edi